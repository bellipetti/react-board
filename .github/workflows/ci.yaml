
name: React App CI/CD with Nginx

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build, tag, and push image to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_REPOSITORY: react-board
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $DOCKER_HUB_USERNAME/$DOCKER_HUB_REPOSITORY:$IMAGE_TAG .
          docker push $DOCKER_HUB_USERNAME/$DOCKER_HUB_REPOSITORY:$IMAGE_TAG

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#  Kubernetes 관련 설정		
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Kubernetes 배포 YAML 파일(k8s/deployment.yaml)의 image 태그를 새로 빌드되는 이미지 태그로 업데이트합니다.  
      - name: Update Deployment YAML
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_REPOSITORY: react-board
          IMAGE_TAG: ${{ github.sha }}
        run:  |
          sed -i 's|image: .*|image: $DOCKER_HUB_USERNAME/$DOCKER_HUB_REPOSITORY:$IMAGE_TAG|' k8s/deployment.yaml

          
      # 변경사항이 있으면 커밋하고 푸시합니다.
      # 변경된 k8s/deployment.yaml파일을 git에 push
      - name: Commit and push if there are changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add k8s/deployment.yaml
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update image tag to ${{ github.sha }}"; git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }})
  

          

  
